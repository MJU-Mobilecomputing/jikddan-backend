// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: weekly_summary.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const findWeeklySummary = `-- name: FindWeeklySummary :one
SELECT month,week_of_month,weekly_food_moisture,weekly_salt,weekly_carbon,weekly_fat,weekly_protein,weekly_average_score FROM weekly_summary WHERE month = $1::int AND week_of_month = $2::int
`

type FindWeeklySummaryParams struct {
	Month   int32 `db:"month" json:"month"`
	WeekNum int32 `db:"week_num" json:"week_num"`
}

type FindWeeklySummaryRow struct {
	Month              pgtype.Numeric `db:"month" json:"month"`
	WeekOfMonth        int32          `db:"week_of_month" json:"week_of_month"`
	WeeklyFoodMoisture int64          `db:"weekly_food_moisture" json:"weekly_food_moisture"`
	WeeklySalt         int64          `db:"weekly_salt" json:"weekly_salt"`
	WeeklyCarbon       int64          `db:"weekly_carbon" json:"weekly_carbon"`
	WeeklyFat          int64          `db:"weekly_fat" json:"weekly_fat"`
	WeeklyProtein      int64          `db:"weekly_protein" json:"weekly_protein"`
	WeeklyAverageScore float64        `db:"weekly_average_score" json:"weekly_average_score"`
}

func (q *Queries) FindWeeklySummary(ctx context.Context, arg FindWeeklySummaryParams) (FindWeeklySummaryRow, error) {
	row := q.db.QueryRow(ctx, findWeeklySummary, arg.Month, arg.WeekNum)
	var i FindWeeklySummaryRow
	err := row.Scan(
		&i.Month,
		&i.WeekOfMonth,
		&i.WeeklyFoodMoisture,
		&i.WeeklySalt,
		&i.WeeklyCarbon,
		&i.WeeklyFat,
		&i.WeeklyProtein,
		&i.WeeklyAverageScore,
	)
	return i, err
}
