// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: diary_menu_query.sql

package repository

import (
	"context"
)

const createDiaryMenu = `-- name: CreateDiaryMenu :one
INSERT INTO diary_menu (img, summary, total_cal, status, menu_time, diary_day_id)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, diary_day_id, img, summary, total_cal, status, menu_time, created_at, updated_at
`

type CreateDiaryMenuParams struct {
	Img        string       `db:"img" json:"img" validate:"required"`
	Summary    string       `db:"summary" json:"summary" validate:"required"`
	TotalCal   int32        `db:"total_cal" json:"total_cal" validate:"required"`
	Status     NullStatus   `db:"status" json:"status" validate:"required,status"`
	MenuTime   NullMenuTime `db:"menu_time" json:"menu_time" validate:"required,menutime"`
	DiaryDayID int64        `db:"diary_day_id" json:"diary_day_id"`
}

func (q *Queries) CreateDiaryMenu(ctx context.Context, arg CreateDiaryMenuParams) (DiaryMenu, error) {
	row := q.db.QueryRow(ctx, createDiaryMenu,
		arg.Img,
		arg.Summary,
		arg.TotalCal,
		arg.Status,
		arg.MenuTime,
		arg.DiaryDayID,
	)
	var i DiaryMenu
	err := row.Scan(
		&i.ID,
		&i.DiaryDayID,
		&i.Img,
		&i.Summary,
		&i.TotalCal,
		&i.Status,
		&i.MenuTime,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
