// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: diary_day.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createDiaryDay = `-- name: CreateDiaryDay :one
INSERT INTO diary_day (date)
VALUES ($1)
RETURNING id, date, created_at, updated_at
`

func (q *Queries) CreateDiaryDay(ctx context.Context, date pgtype.Date) (DiaryDay, error) {
	row := q.db.QueryRow(ctx, createDiaryDay, date)
	var i DiaryDay
	err := row.Scan(
		&i.ID,
		&i.Date,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const findDiaryDayWithDate = `-- name: FindDiaryDayWithDate :one
SELECT id, date, created_at, updated_at FROM diary_day WHERE date = $1
`

func (q *Queries) FindDiaryDayWithDate(ctx context.Context, date pgtype.Date) (DiaryDay, error) {
	row := q.db.QueryRow(ctx, findDiaryDayWithDate, date)
	var i DiaryDay
	err := row.Scan(
		&i.ID,
		&i.Date,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
